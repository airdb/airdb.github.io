(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{318:function(e,t,a){"use strict";a.r(t);var r=a(0),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"minikube-installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minikube-installation"}},[e._v("#")]),e._v(" Minikube Installation")]),e._v(" "),a("h2",{attrs:{id:"requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("p",[e._v("Minikube requires that VT-x/AMD-v virtualization is enabled in BIOS. To check that this is enabled on OSX / macOS run:")]),e._v(" "),a("pre",[a("code",[e._v("sysctl -a | grep machdep.cpu.features | grep VMX --color=auto\n")])]),e._v(" "),a("p",[e._v("If there's output, you're good!")]),e._v(" "),a("h2",{attrs:{id:"prerequisites"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),a("ul",[a("li",[e._v("kubectl")]),e._v(" "),a("li",[e._v("docker (for Mac)")]),e._v(" "),a("li",[e._v("minikube")]),e._v(" "),a("li",[e._v("virtualbox")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("brew update && brew install kubectl && brew cask install docker minikube virtualbox\n")])])]),a("h2",{attrs:{id:"verify"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#verify"}},[e._v("#")]),e._v(" Verify")]),e._v(" "),a("pre",[a("code",[e._v('docker --version                # Docker version 17.09.0-ce, build afdb6d4\ndocker-compose --version        # docker-compose version 1.16.1, build 6d1ac21\ndocker-machine --version        # docker-machine version 0.12.2, build 9371605\nminikube version                # minikube version: v0.22.3\nkubectl version --client        # Client Version: version.Info{Major:"1", Minor:"8", GitVersion:"v1.8.1", GitCommit:"f38e43b221d08850172a9a4ea785a86a3ffa3b3a", GitTreeState:"clean", BuildDate:"2017-10-12T00:45:05Z", GoVersion:"go1.9.1", Compiler:"gc", Platform:"darwin/amd64"}      \n')])]),e._v(" "),a("h2",{attrs:{id:"start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#start"}},[e._v("#")]),e._v(" Start")]),e._v(" "),a("pre",[a("code",[e._v("minikube start\n")])]),e._v(" "),a("p",[e._v("This can take a while, expected output:")]),e._v(" "),a("pre",[a("code",[e._v("Starting local Kubernetes cluster...\nKubectl is now configured to use the cluster.\n")])]),e._v(" "),a("p",[e._v("Great! You now have a running Kubernetes cluster locally. Minikube started a virtual machine for you, and a Kubernetes cluster is now running in that VM.")]),e._v(" "),a("h2",{attrs:{id:"check-k8s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#check-k8s"}},[e._v("#")]),e._v(" Check k8s")]),e._v(" "),a("pre",[a("code",[e._v("kubectl get nodes\n")])]),e._v(" "),a("p",[e._v("Should output something like:")]),e._v(" "),a("pre",[a("code",[e._v("NAME       STATUS    ROLES     AGE       VERSION\nminikube   Ready     <none>    40s       v1.7.5\n")])]),e._v(" "),a("h2",{attrs:{id:"use-minikube-s-built-in-docker-daemon"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-minikube-s-built-in-docker-daemon"}},[e._v("#")]),e._v(" Use minikube's built-in docker daemon:")]),e._v(" "),a("pre",[a("code",[e._v("eval $(minikube docker-env)\n")])]),e._v(" "),a("p",[e._v("Add this line to "),a("code",[e._v(".bash_profile")]),e._v(" or "),a("code",[e._v(".zshrc")]),e._v(" or ... if you want to use minikube's daemon by default (or if you do not want to set this every time you open a new terminal).")]),e._v(" "),a("p",[e._v("You can revert back to the host docker daemon by running:")]),e._v(" "),a("pre",[a("code",[e._v("eval $(docker-machine env -u)\n")])]),e._v(" "),a("p",[e._v("If you now run "),a("code",[e._v("docker ps")]),e._v(", it should now output something like:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('CONTAINER ID        IMAGE                                         COMMAND                 CREATED             STATUS              PORTS               NAMES\ne97128790bf9        gcr.io/google-containers/kube-addon-manager   "/opt/kube-addons.sh"   22 seconds ago      Up 22 seconds                           k8s_kube-addon-manager_kube-addon-manager-minikube_kube-system_c654b2f084cf26941c334a2c3d6db53d_0\n69707e54d1d0        gcr.io/google_containers/pause-amd64:3.0      "/pause"                33 seconds ago      Up 33 seconds                           k8s_POD_kube-addon-manager-minikube_kube-system_c654b2f084cf26941c334a2c3d6db53d_0\n')])])]),a("h2",{attrs:{id:"build-deploy-and-run-an-image-on-your-local-k8s-setup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build-deploy-and-run-an-image-on-your-local-k8s-setup"}},[e._v("#")]),e._v(" Build, deploy and run an image on your local k8s setup")]),e._v(" "),a("p",[e._v("First setup a local registry, so Kubernetes can pull the image(s) from there:")]),e._v(" "),a("pre",[a("code",[e._v("docker run -d -p 5000:5000 --restart=always --name registry registry:2\n")])]),e._v(" "),a("h3",{attrs:{id:"build"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build"}},[e._v("#")]),e._v(" Build")]),e._v(" "),a("p",[e._v("First of, store all files (Dockerfile, my-app.yml, index.html) in this gist locally in some new (empty) directory.")]),e._v(" "),a("p",[e._v("You can build the Dockerfile below locally if you want to follow this guide to the letter. Store the Dockerfile locally, preferably in an empty directory and run:")]),e._v(" "),a("pre",[a("code",[e._v("docker build . --tag my-app\n")])]),e._v(" "),a("p",[e._v("You should now have an image named 'my-app' locally, check by using "),a("code",[e._v("docker images")]),e._v(" (or your own image of course). You can then publish it to your local docker registry:")]),e._v(" "),a("pre",[a("code",[e._v("docker tag my-app localhost:5000/my-app:0.1.0\n")])]),e._v(" "),a("p",[e._v("Running "),a("code",[e._v("docker images")]),e._v(" should now output the following:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("REPOSITORY                                             TAG                 IMAGE ID            CREATED             SIZE\nmy-app                                                 latest              cc949ad8c8d3        44 seconds ago      89.3MB\nlocalhost:5000/my-app                                  0.1.0               cc949ad8c8d3        44 seconds ago      89.3MB\nhttpd                                                  2.4-alpine          fe26194c0b94        7 days ago          89.3MB\n")])])]),a("h3",{attrs:{id:"deploy-and-run"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-and-run"}},[e._v("#")]),e._v(" Deploy and run")]),e._v(" "),a("p",[e._v("Store the file below "),a("code",[e._v("my-app.yml")]),e._v(" on your system and run the following:")]),e._v(" "),a("pre",[a("code",[e._v("kubectl create -f my-app.yml\n")])]),e._v(" "),a("p",[e._v("You should now see your pod and your service:")]),e._v(" "),a("pre",[a("code",[e._v("kubectl get all\n")])]),e._v(" "),a("p",[e._v("The configuration exposes "),a("code",[e._v("my-app")]),e._v(" outside of the cluster, you can get the address to access it by running:")]),e._v(" "),a("pre",[a("code",[e._v("minikube service my-app --url\n")])]),e._v(" "),a("p",[e._v("This should give an output like "),a("code",[e._v("http://192.168.99.100:30304")]),e._v(' (the port will most likely differ). Go there with your favorite browser, you should see "Hello world!". You just accessed your application from outside of your local Kubernetes cluster!')]),e._v(" "),a("h2",{attrs:{id:"kubernetes-gui"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-gui"}},[e._v("#")]),e._v(" Kubernetes GUI")]),e._v(" "),a("pre",[a("code",[e._v("minikube dashboard\n")])]),e._v(" "),a("h2",{attrs:{id:"delete-deployment-of-my-app"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#delete-deployment-of-my-app"}},[e._v("#")]),e._v(" Delete deployment of my-app")]),e._v(" "),a("pre",[a("code",[e._v("kubectl delete deploy my-app\nkubectl delete service my-app\n")])]),e._v(" "),a("p",[e._v("You're now good to go and deploy other images!")]),e._v(" "),a("h2",{attrs:{id:"reset-everything"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reset-everything"}},[e._v("#")]),e._v(" Reset everything")]),e._v(" "),a("pre",[a("code",[e._v("minikube stop;\nminikube delete;\nrm -rf ~/.minikube ~/.kube;\nbrew uninstall kubectl;\nbrew cask uninstall docker virtualbox minikube;\n")])]),e._v(" "),a("h2",{attrs:{id:"version"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#version"}},[e._v("#")]),e._v(" Version")]),e._v(" "),a("p",[e._v("Last tested on 2019 Jul 1st\nmacOS Mojave 10.14.5")])])}),[],!1,null,null,null);t.default=o.exports}}]);